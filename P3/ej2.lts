FORK = (get -> put -> FORK).

PHIL = (sitdown -> right.get -> left.get -> eat
                -> left.put -> right.put -> arise -> PHIL).


||DINERS(N=5) = forall [i:0..N-1] (phil[i]:PHIL || 
                                    {phil[i].left, phil[((i-1)+N)%N].right}::FORK).

BUTLER = BUTLER[0],
BUTLER[i:0..5] = ( when (i<4) sitdown -> BUTLER[i+1]
                 | when (i>0) arise -> BUTLER[i-1]).

||RESTAURANT = (DINERS || BUTLER) 
                    /{phil[i:0..N-1].arise/ arise,
                      phil[i:0..N-1].sitdown/ sitdown}.
